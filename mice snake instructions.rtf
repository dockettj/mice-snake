{\rtf1\ansi\ansicpg1252\cocoartf1639\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{upper-roman\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc3\levelnfcn3\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{upper-alpha\}.}{\leveltext\leveltemplateid2\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid3\'02\'02.;}{\levelnumbers\'01;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{lower-alpha\})}{\leveltext\leveltemplateid4\'02\'03);}{\levelnumbers\'01;}\fi-360\li2880\lin2880 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440
\deftab720
\pard\tx20\tx360\pardeftab720\li360\fi-360\sl360\slmult1\partightenfactor0
\ls1\ilvl0
\f0\fs22 \cf2 {\listtext	I.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Hammer header on Pi - 
\f1\b \cf2 \strokec2 15m\
\ls1\ilvl0
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	II.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Physical connections and boot - 
\f1\b \cf2 \strokec2 15m
\f0\b0 \cf2 \strokec2 \
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	III.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Initial setup & connect to wifi - 
\f1\b \cf2 \strokec2 5m
\f0\b0 \cf2 \strokec2 \
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	IV.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Students accidentally hit update and we take a tour of SVSU 
\f1\b \cf2 \strokec2 45m
\f0\b0 \cf2 \strokec2 \
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	V.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Install Joy Bonnet & Restart 
\f1\b \cf2 \strokec2 10m
\f0\b0 \cf2 \strokec2 \
\pard\tx360\tx720\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	A.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Terminal\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	1.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 curl https://raw.githubusercontent.com/adafruit/Raspberry-Pi-Installer-Scripts/master/joy-bonnet.sh >joy-bonnet.sh\
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	2.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 sudo bash joy-bonnet.sh\
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	3.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Yes, disable overscan\
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	4.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 No, do not install gpis-halt utility\
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	5.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Yes, continue\
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	6.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Wait\
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	7.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Yes, reboot\
\pard\tx20\tx360\pardeftab720\li360\fi-360\sl360\slmult1\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	VI.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Configure Joy Bonnet - 
\f1\b \cf2 \strokec2 15m
\f0\b0 \cf2 \strokec2 \
\pard\tx360\tx720\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	A.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Terminal\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	1.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 sudo nano /boot/joyBonnet.py\
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	2.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 edit file using nano to this effect (follow file\'92s syntax)\uc0\u8232 BUTTON_A: e.KEY_M,\u8232 BUTTON_B: e.KEY_N,\u8232 BUTTON_X: e.KEY_K,\u8232 BUTTON_Y: e.KEY_J,\u8232 SELECT: e.KEY_LEFTCTRL,\u8232 START: e.KEY_ENTER,\u8232 PLAYER1: e.KEY_1,\u8232 PLAYER2: e.KEY_2,\u8232 1000: e.KEY_W,\u8232 1001: e.KEY_S,\u8232 1002: e.KEY_A,\u8232 1003: e.KEY_D\
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	3.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Save using Ctrl + o\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 do not modify filename, hit enter\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	4.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Exit using Ctrl + x\
\pard\tx360\tx720\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	B.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Reboot\
\pard\tx20\tx360\pardeftab720\li360\fi-360\sl360\slmult1\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	VII.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Test Joy Bonnet - 
\f1\b \cf2 \strokec2 5m\
\pard\tx360\tx720\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls1\ilvl1
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	A.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Terminal\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	1.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Press the buttons to make sure they line up with what they\'92re supposed to do.\
\pard\tx20\tx360\pardeftab720\li360\fi-360\sl360\slmult1\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 	VIII.\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2  Game Build -\
\pard\tx360\tx720\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	A.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Create a folder in /home/pi called \'93snake\'94\
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	B.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Create a new file inside of \'93snake\'94 called \'93snake.py\'94\
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	C.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Open \'93snake.py\'94 with Thonny Python Editor\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	1.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Imports - We need to import some already made files to use to build our game\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 import pygame\u8232 import sys\u8232 import random\u8232 import time\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	2.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Creating the snake - We now need to create a class (or blueprint) for our snake to be built by the computer. Right now we\'92re going to just make the snake start in the same place always.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 class Snake():\u8232     def __init__(self):\u8232         self.position = [100,50]\u8232         self.body = [[100,50],[90,50],[80,50]]\u8232         self.direction\u8232         self.direction = \'93RIGHT"\u8232         self.changeDirectionTo = self.direction\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	3.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we need to tell the snake that it can turn, but it is not allowed to go straight backwards. (point out assignment operator vs is equal to )\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 def.changeDirTo(self,dir):\u8232     if dir==\'93RIGHT\'94 and not self.direction==\'93LEFT\'94:\u8232         self.direction = \'93RIGHT\'94\u8232     if dir==\'93LEFT\'94 and not self.direction==\'93RIGHT\'94:\u8232         self.direction = \'93LEFT\'94\u8232     if dir==\'93DOWN\'94 and not self.direction==\'93UP\'94:\u8232         self.direction = \'93DOWN\'94\u8232     if dir==\'93UP\'94 and not self.direction==\'93DOWN\'94:\u8232         self.direction = \'93UP\'94\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	4.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we need actually move the snake along and check to see if it hits a piece of food as it is moving and what to do when that happens. (explain that x += y is the same as x = x + y where it is assigning the new value to x on the left of the equals sign) \
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 def move(self,foodPos):\u8232     if self.direction == \'93RIGHT\'94:\u8232         self.position[0] += 10\u8232     if self.direction == \'93LEFT\'94:\u8232         self.position[0] -= 10\u8232     if self.direction == \'93UP\'94:\u8232         self.position[1] += 10\u8232     if self.direction == \'93DOWN\'94:\u8232         self.position[1] -= 10\u8232     self.body.insert(0,list(self.position))\u8232     if self.position == foodPos:\u8232         return 1\u8232     else:\u8232         self.body.pop()\u8232         return 0\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	5.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we need to make sure that the snake does not leave the boundaries of the screen.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 def checkCollision(self):\u8232     if self.position[0] > 490 or self.position[0] < 0:\u8232         return 1\u8232     elif self.position[1] > 490 or self.position[1] < 0:\u8232         return 1\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	6.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we need to make sure that the snake can not run into itself\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 for bodyPart in self.body[1:]:\u8232     if self.position == bodyPart:\u8232         return 1\u8232 return 0\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	7.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we need to establish where the snake actually is per frame\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 def getHeadPos(self):\u8232     return self.position\u8232 def getBody(self):\u8232     return self.body\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	8.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Let\'92s create a food generator that places food at random on the screen\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 class FoodSpawner():\u8232     def __init__(self):\u8232         self.position = [random.randrange(1,50)*10, random.randrange(1,50)*10]\u8232         self.isFoodOnScreen = True\u8232     def spawnFood(self):\u8232         if self.isFoodOnScreen == False:\u8232             self.position = [random.randrange(1,50)*10, random.randrange(1,50)*10]\u8232             self.isFoodOnScreen = True\u8232         return self.position\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	9.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now that the food shows up, we need to implement a way to add more food when the snake eats the food we just generated.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 def setFoodOnScreen(self,b):\u8232     self.isFoodOnScreen = b\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	10.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now that we have the rules for the snake and the rules for the food, let\'92s put them together with some gameplay. We will start by creating a window and setting how fast the game renders.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 window = pygame.display.set_mode((500,500))\u8232 pygame.display.set_caption(\'93Snake\'94)\u8232 fps = pygame.time.Clock()\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	11.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Okay, so we have a window. Let\'92s set a score.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 score = 0\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	12.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 And now a hook to allow our snake and food to exist\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 snake = Snake()\u8232 foodSpawner = FoodSpawner()\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	13.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we can try to run the game.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 The screen will just be black at this point, but a window will open. Help students work through syntax errors up to this point. The X button might not close the game. Move the window and click the stop button in Thonny.\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	14.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we need to add a mechanism to quit the game \
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 def gameOver():\u8232     pygame.quit()\u8232     sys.exit\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	15.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now to tie it all together with the gameplay to move the snake\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 while True:\u8232     for event in pygame.event.get():\u8232         if event.type == pygame.QUIT:\u8232             gameOver()\u8232         elif event.type == pygame.KEYDOWN:\u8232             if event.key == pygame.K_d:\u8232                 snake.changeDirTo(\'93RIGHT\'94)\u8232             if event.key == pygame.K_s:\u8232                 snake.changeDirTo(\'93DOWN\'94)\u8232             if event.key == pygame.K_a:\u8232                 snake.changeDirTo(\'93LEFT\'94)\u8232             if event.key == pygame.K_w:\u8232                 snake.changeDirTo(\'93UP\'94)\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	16.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Next is to make the food spawn and tell it how to act when the snake hits it.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 foodPos = foodSpawner.spawnFood()\u8232 if(snake.move(foodPos)==1):\u8232     score += 1\u8232     foodSpawner.setFoodOnScreen(False)\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	17.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Let\'92s change the background color\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 window.fill(pygame.Color(255,0,255))\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	18.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we\'92ll put the snake on the screen\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 for pos in snake.getBody():\u8232     pygame.draw.rect(window,pygame.Color(0,225,0),pygame.Rect(pos[0],pos[1],10,10))\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	19.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 And now we put the food on the screen.\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 pygame.draw.rect(window,pygame.Color(225,0,0),pygame.Rect(foodPos[0],foodPos[1],10,10))\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	20.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Now we check to see if the snake has collided with the food\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 if(snake.checkCollision()==1):\u8232     gameOver()\
\pard\tx720\tx1080\pardeftab720\li1080\fi-1080\sl360\slmult1\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	21.	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Set the title to include your score and tell the computer how to display the game the right way\
\pard\tx1080\tx1440\pardeftab720\li1440\fi-1440\sl360\slmult1\partightenfactor0
\ls1\ilvl3\cf2 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 {\listtext	a)	}\cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Code:\uc0\u8232 pygame.display.set_caption(\'93Snake | Score : \'93+str(score) )\u8232 pygame.display.flip()\u8232 fps.tick(15)}